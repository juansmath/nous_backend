# Generated by Django 3.1.5 on 2021-09-28 04:34

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('estudiante', '0002_auto_20210909_0310'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('docente', '0002_auto_20210909_0310'),
    ]

    operations = [
        migrations.CreateModel(
            name='BancoPreguntas',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('estado', models.BooleanField(default=True, verbose_name='Estado')),
                ('fecha_creacion', models.DateField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('fecha_actualizacion', models.DateField(auto_now=True, verbose_name='Fecha de actualizacion')),
                ('fecha_eliminacion', models.DateField(auto_now=True, verbose_name='Fecha deeliminación')),
                ('nombre_banco', models.CharField(max_length=100, verbose_name='Nombre del banco de preguntas')),
            ],
            options={
                'verbose_name': 'Banco de preguntas',
                'verbose_name_plural': 'Bancos de preguntas',
                'ordering': ['nombre_banco'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Competencia',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('estado', models.BooleanField(default=True, verbose_name='Estado')),
                ('fecha_creacion', models.DateField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('fecha_actualizacion', models.DateField(auto_now=True, verbose_name='Fecha de actualizacion')),
                ('fecha_eliminacion', models.DateField(auto_now=True, verbose_name='Fecha deeliminación')),
                ('nombre_competencia', models.CharField(max_length=100, verbose_name='Nombre de la competencia')),
                ('porcentaje', models.FloatField(blank=True, null=True, verbose_name='Porcentaje de la competencia')),
            ],
            options={
                'verbose_name': 'Competencia',
                'verbose_name_plural': 'Competencias',
                'ordering': ['nombre_competencia'],
            },
        ),
        migrations.CreateModel(
            name='EnunciadoGrupoPregunta',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('estado', models.BooleanField(default=True, verbose_name='Estado')),
                ('fecha_creacion', models.DateField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('fecha_actualizacion', models.DateField(auto_now=True, verbose_name='Fecha de actualizacion')),
                ('fecha_eliminacion', models.DateField(auto_now=True, verbose_name='Fecha deeliminación')),
                ('enunciado_general', models.TextField(unique=True, verbose_name='Enunciado general del grupo de preguntas')),
            ],
            options={
                'verbose_name': 'Enunciado grupo pregunta',
                'verbose_name_plural': 'Enunciados grupo preguntas',
                'ordering': ['fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='EnunciadoPregunta',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('estado', models.BooleanField(default=True, verbose_name='Estado')),
                ('fecha_creacion', models.DateField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('fecha_actualizacion', models.DateField(auto_now=True, verbose_name='Fecha de actualizacion')),
                ('fecha_eliminacion', models.DateField(auto_now=True, verbose_name='Fecha deeliminación')),
                ('enunciado', models.TextField(verbose_name='Enunciado de la pregunta')),
            ],
            options={
                'verbose_name': 'Enunciado pregunta',
                'verbose_name_plural': 'Enunciados pregunta',
                'ordering': ['fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='GrupoPregunta',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('estado', models.BooleanField(default=True, verbose_name='Estado')),
                ('fecha_creacion', models.DateField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('fecha_actualizacion', models.DateField(auto_now=True, verbose_name='Fecha de actualizacion')),
                ('fecha_eliminacion', models.DateField(auto_now=True, verbose_name='Fecha deeliminación')),
                ('nombre_grupo', models.CharField(max_length=200, unique=True, verbose_name='Nombre del grupo')),
                ('cantidad_preguntas', models.PositiveSmallIntegerField(blank=True, default=0, null=True, verbose_name='Cantidad maxíma de preguntas')),
                ('banco_preguntas', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='prueba.bancopreguntas')),
            ],
            options={
                'verbose_name': 'Grupo de preguntas',
                'verbose_name_plural': 'Grupos de pregusntas',
                'ordering': ['nombre_grupo'],
            },
        ),
        migrations.CreateModel(
            name='Justificacion',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('estado', models.BooleanField(default=True, verbose_name='Estado')),
                ('fecha_creacion', models.DateField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('fecha_actualizacion', models.DateField(auto_now=True, verbose_name='Fecha de actualizacion')),
                ('fecha_eliminacion', models.DateField(auto_now=True, verbose_name='Fecha deeliminación')),
                ('afirmacion', models.CharField(max_length=250, verbose_name='Afirmación')),
                ('evidencia', models.CharField(max_length=250, verbose_name='Evidencia')),
                ('justificacion', models.TextField(verbose_name='Justificacion de la pregunta')),
            ],
            options={
                'verbose_name': 'Justificacion',
                'verbose_name_plural': 'Justificaciones',
            },
        ),
        migrations.CreateModel(
            name='Modulo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('estado', models.BooleanField(default=True, verbose_name='Estado')),
                ('fecha_creacion', models.DateField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('fecha_actualizacion', models.DateField(auto_now=True, verbose_name='Fecha de actualizacion')),
                ('fecha_eliminacion', models.DateField(auto_now=True, verbose_name='Fecha deeliminación')),
                ('nombre_modulo', models.CharField(max_length=100, verbose_name='Nombre del módulo')),
            ],
            options={
                'verbose_name': 'Modulo',
                'verbose_name_plural': 'Modulos',
                'ordering': ['nombre_modulo'],
            },
        ),
        migrations.CreateModel(
            name='NivelDificultad',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('estado', models.BooleanField(default=True, verbose_name='Estado')),
                ('fecha_creacion', models.DateField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('fecha_actualizacion', models.DateField(auto_now=True, verbose_name='Fecha de actualizacion')),
                ('fecha_eliminacion', models.DateField(auto_now=True, verbose_name='Fecha deeliminación')),
                ('dificultad', models.CharField(max_length=20, unique=True, verbose_name='Tipo de dificultad')),
            ],
            options={
                'verbose_name': 'Nivel de dificultad',
                'verbose_name_plural': 'Niveles de dificultad',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='NivelEjecucion',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('estado', models.BooleanField(default=True, verbose_name='Estado')),
                ('fecha_creacion', models.DateField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('fecha_actualizacion', models.DateField(auto_now=True, verbose_name='Fecha de actualizacion')),
                ('fecha_eliminacion', models.DateField(auto_now=True, verbose_name='Fecha deeliminación')),
                ('nivel_ejecucion', models.CharField(max_length=50, verbose_name='Nivel de desempeño')),
                ('puntaje_minimo', models.PositiveSmallIntegerField(verbose_name='Puntaje minimo')),
                ('puntaje_maximo', models.PositiveSmallIntegerField(verbose_name='Puntaje maximo')),
                ('descripcion_general', models.TextField(verbose_name='Descripción nivel')),
                ('modulo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='prueba.modulo')),
                ('nivel_dificultad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='prueba.niveldificultad')),
            ],
            options={
                'verbose_name': 'Nivel de desempeño',
                'verbose_name_plural': 'Niveles de desempeño',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Prueba',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('estado', models.BooleanField(default=True, verbose_name='Estado')),
                ('fecha_creacion', models.DateField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('fecha_actualizacion', models.DateField(auto_now=True, verbose_name='Fecha de actualizacion')),
                ('fecha_eliminacion', models.DateField(auto_now=True, verbose_name='Fecha deeliminación')),
                ('nombre_prueba', models.CharField(max_length=100, unique=True, verbose_name='Nombre de la prueba')),
                ('limite_tiempo', models.TimeField(verbose_name='Limite de tiempo para presentar la prueba')),
                ('numero_intentos', models.PositiveSmallIntegerField(default=1)),
                ('banco_preguntas', models.ManyToManyField(to='prueba.BancoPreguntas')),
                ('docente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='docente.docente')),
            ],
            options={
                'verbose_name': 'Prueba',
                'verbose_name_plural': 'Pruebas',
                'ordering': ['nombre_prueba'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PruebasEstudiante',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('estado', models.BooleanField(default=True, verbose_name='Estado')),
                ('fecha_creacion', models.DateField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('fecha_actualizacion', models.DateField(auto_now=True, verbose_name='Fecha de actualizacion')),
                ('fecha_eliminacion', models.DateField(auto_now=True, verbose_name='Fecha deeliminación')),
                ('presentada', models.BooleanField(default=False, verbose_name='Prueba presentada')),
                ('calificada', models.BooleanField(default=False, verbose_name='Prueba calificada')),
                ('numero_aciertos', models.PositiveSmallIntegerField(blank=True, default=0, null=True, verbose_name='Respuestas correctas')),
                ('numero_desaciertos', models.PositiveSmallIntegerField(blank=True, default=0, null=True, verbose_name='Respuestas incorrectas')),
                ('tiempo_empleado', models.TimeField(blank=True, default='00:00:00', null=True, verbose_name='Tiempo empleado en la prueba')),
                ('puntaje_prueba', models.PositiveSmallIntegerField(default=0, null=True, verbose_name='Puntaje obtenido en la prueba')),
                ('docente', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='docente.docente')),
                ('estudiante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='estudiante.estudiante')),
                ('modulo', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='prueba.modulo')),
                ('nivel_ejecucion', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='prueba.nivelejecucion')),
                ('prueba', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='prueba.prueba')),
            ],
            options={
                'verbose_name': 'Prueba Asiganda',
                'verbose_name_plural': 'Pruebas asignadas',
                'ordering': ['fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='Pregunta',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('estado', models.BooleanField(default=True, verbose_name='Estado')),
                ('fecha_creacion', models.DateField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('fecha_actualizacion', models.DateField(auto_now=True, verbose_name='Fecha de actualizacion')),
                ('fecha_eliminacion', models.DateField(auto_now=True, verbose_name='Fecha deeliminación')),
                ('respuesta', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L'), ('M', 'M'), ('N', 'N'), ('O', 'O'), ('P', 'P'), ('R', 'R'), ('S', 'S'), ('T', 'T'), ('U', 'U'), ('V', 'V'), ('W', 'W'), ('X', 'X'), ('Y', 'Y'), ('Z', 'Z')], max_length=1, verbose_name='Respuesta')),
                ('valor_pregunta', models.FloatField(blank=True, default=0, verbose_name='Valor de la pregutna')),
                ('banco_preguntas', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='prueba.bancopreguntas')),
                ('competencia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='prueba.competencia')),
                ('grupo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='prueba.grupopregunta')),
                ('justificacion', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='prueba.justificacion')),
                ('modulo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='prueba.modulo')),
                ('nivel_dificultad', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='prueba.niveldificultad')),
            ],
            options={
                'verbose_name': 'Pregunta',
                'verbose_name_plural': 'Preguntas',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='OpcionPregunta',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('estado', models.BooleanField(default=True, verbose_name='Estado')),
                ('fecha_creacion', models.DateField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('fecha_actualizacion', models.DateField(auto_now=True, verbose_name='Fecha de actualizacion')),
                ('fecha_eliminacion', models.DateField(auto_now=True, verbose_name='Fecha deeliminación')),
                ('contenido_opcion', models.CharField(max_length=250, verbose_name='Contenido de la opción')),
                ('letra', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L'), ('M', 'M'), ('N', 'N'), ('O', 'O'), ('P', 'P'), ('R', 'R'), ('S', 'S'), ('T', 'T'), ('U', 'U'), ('V', 'V'), ('W', 'W'), ('X', 'X'), ('Y', 'Y'), ('Z', 'Z')], max_length=1, verbose_name='Letra')),
                ('pregunta', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='prueba.pregunta')),
            ],
            options={
                'verbose_name': 'Opcion Enunciado',
                'verbose_name_plural': 'Opciones enunciado',
            },
        ),
        migrations.CreateModel(
            name='ImagenEnunciadoPregunta',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('estado', models.BooleanField(default=True, verbose_name='Estado')),
                ('fecha_creacion', models.DateField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('fecha_actualizacion', models.DateField(auto_now=True, verbose_name='Fecha de actualizacion')),
                ('fecha_eliminacion', models.DateField(auto_now=True, verbose_name='Fecha deeliminación')),
                ('imagen_enunciado', models.ImageField(max_length=200, upload_to=None, verbose_name='Imagen pregunta')),
                ('enunciado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='prueba.enunciadopregunta')),
            ],
            options={
                'verbose_name': 'Imagen para pregunta',
                'verbose_name_plural': 'Imagenes para preguntas',
            },
        ),
        migrations.CreateModel(
            name='ImagenEnunciadoGrupoPregunta',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('estado', models.BooleanField(default=True, verbose_name='Estado')),
                ('fecha_creacion', models.DateField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('fecha_actualizacion', models.DateField(auto_now=True, verbose_name='Fecha de actualizacion')),
                ('fecha_eliminacion', models.DateField(auto_now=True, verbose_name='Fecha deeliminación')),
                ('imagen', models.ImageField(max_length=200, upload_to=None, verbose_name='Imagen grupo preguntas')),
                ('enunciado_grupo_preguntas', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='prueba.enunciadogrupopregunta')),
            ],
            options={
                'verbose_name': 'Imagen para grupo de preguntas',
                'verbose_name_plural': 'Imagenes para grupo de preguntas',
            },
        ),
        migrations.CreateModel(
            name='HojaRespuesta',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('estado', models.BooleanField(default=True, verbose_name='Estado')),
                ('fecha_creacion', models.DateField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('fecha_actualizacion', models.DateField(auto_now=True, verbose_name='Fecha de actualizacion')),
                ('fecha_eliminacion', models.DateField(auto_now=True, verbose_name='Fecha deeliminación')),
                ('opcion_marcada', models.CharField(blank=True, choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L'), ('M', 'M'), ('N', 'N'), ('O', 'O'), ('P', 'P'), ('R', 'R'), ('S', 'S'), ('T', 'T'), ('U', 'U'), ('V', 'V'), ('W', 'W'), ('X', 'X'), ('Y', 'Y'), ('Z', 'Z')], max_length=1, null=True, verbose_name='Opcion marcada')),
                ('tiempo_empleado_pregunta', models.TimeField(verbose_name='Tiempo en responder la pregunta')),
                ('calificada', models.BooleanField(default=False, verbose_name='Calificada')),
                ('nota', models.BooleanField(default=False, verbose_name='Nota')),
                ('estudiante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='estudiante.estudiante')),
                ('pregunta', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='prueba.pregunta')),
                ('prueba_asignada', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='prueba.pruebasestudiante')),
            ],
            options={
                'verbose_name': 'Hoja de respuesta',
                'verbose_name_plural': 'Hoja de respuestas',
            },
        ),
        migrations.CreateModel(
            name='HistoricalPruebasEstudiante',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('estado', models.BooleanField(default=True, verbose_name='Estado')),
                ('fecha_creacion', models.DateField(blank=True, editable=False, verbose_name='Fecha de creación')),
                ('fecha_actualizacion', models.DateField(blank=True, editable=False, verbose_name='Fecha de actualizacion')),
                ('fecha_eliminacion', models.DateField(blank=True, editable=False, verbose_name='Fecha deeliminación')),
                ('presentada', models.BooleanField(default=False, verbose_name='Prueba presentada')),
                ('calificada', models.BooleanField(default=False, verbose_name='Prueba calificada')),
                ('numero_aciertos', models.PositiveSmallIntegerField(blank=True, default=0, null=True, verbose_name='Respuestas correctas')),
                ('numero_desaciertos', models.PositiveSmallIntegerField(blank=True, default=0, null=True, verbose_name='Respuestas incorrectas')),
                ('tiempo_empleado', models.TimeField(blank=True, default='00:00:00', null=True, verbose_name='Tiempo empleado en la prueba')),
                ('puntaje_prueba', models.PositiveSmallIntegerField(default=0, null=True, verbose_name='Puntaje obtenido en la prueba')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('docente', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='docente.docente')),
                ('estudiante', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='estudiante.estudiante')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modulo', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='prueba.modulo')),
                ('nivel_ejecucion', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='prueba.nivelejecucion')),
                ('prueba', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='prueba.prueba')),
            ],
            options={
                'verbose_name': 'historical Prueba Asiganda',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPrueba',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('estado', models.BooleanField(default=True, verbose_name='Estado')),
                ('fecha_creacion', models.DateField(blank=True, editable=False, verbose_name='Fecha de creación')),
                ('fecha_actualizacion', models.DateField(blank=True, editable=False, verbose_name='Fecha de actualizacion')),
                ('fecha_eliminacion', models.DateField(blank=True, editable=False, verbose_name='Fecha deeliminación')),
                ('nombre_prueba', models.CharField(db_index=True, max_length=100, verbose_name='Nombre de la prueba')),
                ('limite_tiempo', models.TimeField(verbose_name='Limite de tiempo para presentar la prueba')),
                ('numero_intentos', models.PositiveSmallIntegerField(default=1)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('docente', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='docente.docente')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Prueba',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPregunta',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('estado', models.BooleanField(default=True, verbose_name='Estado')),
                ('fecha_creacion', models.DateField(blank=True, editable=False, verbose_name='Fecha de creación')),
                ('fecha_actualizacion', models.DateField(blank=True, editable=False, verbose_name='Fecha de actualizacion')),
                ('fecha_eliminacion', models.DateField(blank=True, editable=False, verbose_name='Fecha deeliminación')),
                ('respuesta', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L'), ('M', 'M'), ('N', 'N'), ('O', 'O'), ('P', 'P'), ('R', 'R'), ('S', 'S'), ('T', 'T'), ('U', 'U'), ('V', 'V'), ('W', 'W'), ('X', 'X'), ('Y', 'Y'), ('Z', 'Z')], max_length=1, verbose_name='Respuesta')),
                ('valor_pregunta', models.FloatField(blank=True, default=0, verbose_name='Valor de la pregutna')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('banco_preguntas', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='prueba.bancopreguntas')),
                ('competencia', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='prueba.competencia')),
                ('grupo', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='prueba.grupopregunta')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('justificacion', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='prueba.justificacion')),
                ('modulo', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='prueba.modulo')),
                ('nivel_dificultad', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='prueba.niveldificultad')),
            ],
            options={
                'verbose_name': 'historical Pregunta',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalOpcionPregunta',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('estado', models.BooleanField(default=True, verbose_name='Estado')),
                ('fecha_creacion', models.DateField(blank=True, editable=False, verbose_name='Fecha de creación')),
                ('fecha_actualizacion', models.DateField(blank=True, editable=False, verbose_name='Fecha de actualizacion')),
                ('fecha_eliminacion', models.DateField(blank=True, editable=False, verbose_name='Fecha deeliminación')),
                ('contenido_opcion', models.CharField(max_length=250, verbose_name='Contenido de la opción')),
                ('letra', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L'), ('M', 'M'), ('N', 'N'), ('O', 'O'), ('P', 'P'), ('R', 'R'), ('S', 'S'), ('T', 'T'), ('U', 'U'), ('V', 'V'), ('W', 'W'), ('X', 'X'), ('Y', 'Y'), ('Z', 'Z')], max_length=1, verbose_name='Letra')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('pregunta', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='prueba.pregunta')),
            ],
            options={
                'verbose_name': 'historical Opcion Enunciado',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalNivelEjecucion',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('estado', models.BooleanField(default=True, verbose_name='Estado')),
                ('fecha_creacion', models.DateField(blank=True, editable=False, verbose_name='Fecha de creación')),
                ('fecha_actualizacion', models.DateField(blank=True, editable=False, verbose_name='Fecha de actualizacion')),
                ('fecha_eliminacion', models.DateField(blank=True, editable=False, verbose_name='Fecha deeliminación')),
                ('nivel_ejecucion', models.CharField(max_length=50, verbose_name='Nivel de desempeño')),
                ('puntaje_minimo', models.PositiveSmallIntegerField(verbose_name='Puntaje minimo')),
                ('puntaje_maximo', models.PositiveSmallIntegerField(verbose_name='Puntaje maximo')),
                ('descripcion_general', models.TextField(verbose_name='Descripción nivel')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modulo', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='prueba.modulo')),
                ('nivel_dificultad', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='prueba.niveldificultad')),
            ],
            options={
                'verbose_name': 'historical Nivel de desempeño',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalNivelDificultad',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('estado', models.BooleanField(default=True, verbose_name='Estado')),
                ('fecha_creacion', models.DateField(blank=True, editable=False, verbose_name='Fecha de creación')),
                ('fecha_actualizacion', models.DateField(blank=True, editable=False, verbose_name='Fecha de actualizacion')),
                ('fecha_eliminacion', models.DateField(blank=True, editable=False, verbose_name='Fecha deeliminación')),
                ('dificultad', models.CharField(db_index=True, max_length=20, verbose_name='Tipo de dificultad')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Nivel de dificultad',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalModulo',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('estado', models.BooleanField(default=True, verbose_name='Estado')),
                ('fecha_creacion', models.DateField(blank=True, editable=False, verbose_name='Fecha de creación')),
                ('fecha_actualizacion', models.DateField(blank=True, editable=False, verbose_name='Fecha de actualizacion')),
                ('fecha_eliminacion', models.DateField(blank=True, editable=False, verbose_name='Fecha deeliminación')),
                ('nombre_modulo', models.CharField(max_length=100, verbose_name='Nombre del módulo')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Modulo',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalJustificacion',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('estado', models.BooleanField(default=True, verbose_name='Estado')),
                ('fecha_creacion', models.DateField(blank=True, editable=False, verbose_name='Fecha de creación')),
                ('fecha_actualizacion', models.DateField(blank=True, editable=False, verbose_name='Fecha de actualizacion')),
                ('fecha_eliminacion', models.DateField(blank=True, editable=False, verbose_name='Fecha deeliminación')),
                ('afirmacion', models.CharField(max_length=250, verbose_name='Afirmación')),
                ('evidencia', models.CharField(max_length=250, verbose_name='Evidencia')),
                ('justificacion', models.TextField(verbose_name='Justificacion de la pregunta')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Justificacion',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalImagenEnunciadoPregunta',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('estado', models.BooleanField(default=True, verbose_name='Estado')),
                ('fecha_creacion', models.DateField(blank=True, editable=False, verbose_name='Fecha de creación')),
                ('fecha_actualizacion', models.DateField(blank=True, editable=False, verbose_name='Fecha de actualizacion')),
                ('fecha_eliminacion', models.DateField(blank=True, editable=False, verbose_name='Fecha deeliminación')),
                ('imagen_enunciado', models.TextField(max_length=200, verbose_name='Imagen pregunta')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('enunciado', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='prueba.enunciadopregunta')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Imagen para pregunta',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalImagenEnunciadoGrupoPregunta',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('estado', models.BooleanField(default=True, verbose_name='Estado')),
                ('fecha_creacion', models.DateField(blank=True, editable=False, verbose_name='Fecha de creación')),
                ('fecha_actualizacion', models.DateField(blank=True, editable=False, verbose_name='Fecha de actualizacion')),
                ('fecha_eliminacion', models.DateField(blank=True, editable=False, verbose_name='Fecha deeliminación')),
                ('imagen', models.TextField(max_length=200, verbose_name='Imagen grupo preguntas')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('enunciado_grupo_preguntas', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='prueba.enunciadogrupopregunta')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Imagen para grupo de preguntas',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalHojaRespuesta',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('estado', models.BooleanField(default=True, verbose_name='Estado')),
                ('fecha_creacion', models.DateField(blank=True, editable=False, verbose_name='Fecha de creación')),
                ('fecha_actualizacion', models.DateField(blank=True, editable=False, verbose_name='Fecha de actualizacion')),
                ('fecha_eliminacion', models.DateField(blank=True, editable=False, verbose_name='Fecha deeliminación')),
                ('opcion_marcada', models.CharField(blank=True, choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L'), ('M', 'M'), ('N', 'N'), ('O', 'O'), ('P', 'P'), ('R', 'R'), ('S', 'S'), ('T', 'T'), ('U', 'U'), ('V', 'V'), ('W', 'W'), ('X', 'X'), ('Y', 'Y'), ('Z', 'Z')], max_length=1, null=True, verbose_name='Opcion marcada')),
                ('tiempo_empleado_pregunta', models.TimeField(verbose_name='Tiempo en responder la pregunta')),
                ('calificada', models.BooleanField(default=False, verbose_name='Calificada')),
                ('nota', models.BooleanField(default=False, verbose_name='Nota')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('estudiante', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='estudiante.estudiante')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('pregunta', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='prueba.pregunta')),
                ('prueba_asignada', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='prueba.pruebasestudiante')),
            ],
            options={
                'verbose_name': 'historical Hoja de respuesta',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalGrupoPregunta',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('estado', models.BooleanField(default=True, verbose_name='Estado')),
                ('fecha_creacion', models.DateField(blank=True, editable=False, verbose_name='Fecha de creación')),
                ('fecha_actualizacion', models.DateField(blank=True, editable=False, verbose_name='Fecha de actualizacion')),
                ('fecha_eliminacion', models.DateField(blank=True, editable=False, verbose_name='Fecha deeliminación')),
                ('nombre_grupo', models.CharField(db_index=True, max_length=200, verbose_name='Nombre del grupo')),
                ('cantidad_preguntas', models.PositiveSmallIntegerField(blank=True, default=0, null=True, verbose_name='Cantidad maxíma de preguntas')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('banco_preguntas', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='prueba.bancopreguntas')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Grupo de preguntas',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalEnunciadoPregunta',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('estado', models.BooleanField(default=True, verbose_name='Estado')),
                ('fecha_creacion', models.DateField(blank=True, editable=False, verbose_name='Fecha de creación')),
                ('fecha_actualizacion', models.DateField(blank=True, editable=False, verbose_name='Fecha de actualizacion')),
                ('fecha_eliminacion', models.DateField(blank=True, editable=False, verbose_name='Fecha deeliminación')),
                ('enunciado', models.TextField(verbose_name='Enunciado de la pregunta')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('pregunta', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='prueba.pregunta')),
            ],
            options={
                'verbose_name': 'historical Enunciado pregunta',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalEnunciadoGrupoPregunta',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('estado', models.BooleanField(default=True, verbose_name='Estado')),
                ('fecha_creacion', models.DateField(blank=True, editable=False, verbose_name='Fecha de creación')),
                ('fecha_actualizacion', models.DateField(blank=True, editable=False, verbose_name='Fecha de actualizacion')),
                ('fecha_eliminacion', models.DateField(blank=True, editable=False, verbose_name='Fecha deeliminación')),
                ('enunciado_general', models.TextField(db_index=True, verbose_name='Enunciado general del grupo de preguntas')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('grupo', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='prueba.grupopregunta')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Enunciado grupo pregunta',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDescripcionNivelEjecucion',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('estado', models.BooleanField(default=True, verbose_name='Estado')),
                ('fecha_creacion', models.DateField(blank=True, editable=False, verbose_name='Fecha de creación')),
                ('fecha_actualizacion', models.DateField(blank=True, editable=False, verbose_name='Fecha de actualizacion')),
                ('fecha_eliminacion', models.DateField(blank=True, editable=False, verbose_name='Fecha deeliminación')),
                ('descripcion_especifica', models.TextField(verbose_name='Descripción especifica nivel desempeño')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('nivel_ejecucion', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='prueba.nivelejecucion')),
            ],
            options={
                'verbose_name': 'historical Descripcion especifica nivel de desempeño',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCompetencia',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('estado', models.BooleanField(default=True, verbose_name='Estado')),
                ('fecha_creacion', models.DateField(blank=True, editable=False, verbose_name='Fecha de creación')),
                ('fecha_actualizacion', models.DateField(blank=True, editable=False, verbose_name='Fecha de actualizacion')),
                ('fecha_eliminacion', models.DateField(blank=True, editable=False, verbose_name='Fecha deeliminación')),
                ('nombre_competencia', models.CharField(max_length=100, verbose_name='Nombre de la competencia')),
                ('porcentaje', models.FloatField(blank=True, null=True, verbose_name='Porcentaje de la competencia')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modulo', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='prueba.modulo')),
            ],
            options={
                'verbose_name': 'historical Competencia',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalBancoPreguntas',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('estado', models.BooleanField(default=True, verbose_name='Estado')),
                ('fecha_creacion', models.DateField(blank=True, editable=False, verbose_name='Fecha de creación')),
                ('fecha_actualizacion', models.DateField(blank=True, editable=False, verbose_name='Fecha de actualizacion')),
                ('fecha_eliminacion', models.DateField(blank=True, editable=False, verbose_name='Fecha deeliminación')),
                ('nombre_banco', models.CharField(max_length=100, verbose_name='Nombre del banco de preguntas')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modulo', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='prueba.modulo')),
            ],
            options={
                'verbose_name': 'historical Banco de preguntas',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddField(
            model_name='enunciadopregunta',
            name='pregunta',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='prueba.pregunta'),
        ),
        migrations.AddField(
            model_name='enunciadogrupopregunta',
            name='grupo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='prueba.grupopregunta'),
        ),
        migrations.CreateModel(
            name='DescripcionNivelEjecucion',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('estado', models.BooleanField(default=True, verbose_name='Estado')),
                ('fecha_creacion', models.DateField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('fecha_actualizacion', models.DateField(auto_now=True, verbose_name='Fecha de actualizacion')),
                ('fecha_eliminacion', models.DateField(auto_now=True, verbose_name='Fecha deeliminación')),
                ('descripcion_especifica', models.TextField(verbose_name='Descripción especifica nivel desempeño')),
                ('nivel_ejecucion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='prueba.nivelejecucion')),
            ],
            options={
                'verbose_name': 'Descripcion especifica nivel de desempeño',
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='competencia',
            name='modulo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='prueba.modulo'),
        ),
        migrations.AddField(
            model_name='bancopreguntas',
            name='competencias',
            field=models.ManyToManyField(to='prueba.Competencia'),
        ),
        migrations.AddField(
            model_name='bancopreguntas',
            name='modulo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='prueba.modulo'),
        ),
    ]
